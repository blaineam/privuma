version: '2.2'
services:
    web:
        build: ./docker/images/nginx
        container_name: privuma_nginx
        volumes:
            - "./docker/etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./docker/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template:ro"
            - ./docker/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - "./web/:/var/www/html/:ro"
        ports:
            - "8000:80"
            - "3000:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        links:
            - php-web
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php-web
            - mysqldb
        cpu_shares: 256
        mem_limit: 256M
    php-web:
        image: cenode/privuma-php
        restart: always
        container_name: privuma_php_web
        env_file:
            - "web/config/.env"
        links:
            - mysqldb
            - db
        command: bash -c "echo "" > /etc/cron.d/privuma && rsyslogd && php-fpm"
        volumes:
            - ./docker/etc/php/zz-overrides.ini:/usr/local/etc/php/conf.d/zz-overrides.ini:ro
            - ./docker/etc/php/zzz-overrides.conf:/etc/php-fpm.d/zzz-overrides.conf:ro
            - "./web/:/var/www/html/"
        depends_on:
            - mysqldb
            - db
        cpu_shares: 256
        mem_limit: 1G
    php-cron:
        image: cenode/privuma-php
        restart: always
        container_name: privuma_php_cron
        env_file:
            - "web/config/.env"
        links:
            - mysqldb
            - db
        volumes:
            - ./docker/etc/php/zz-overrides.ini:/usr/local/etc/php/conf.d/zz-overrides.ini:ro
            - ./docker/etc/php/zzz-overrides.conf:/etc/php-fpm.d/zzz-overrides.conf:ro
            - "./web/:/var/www/html/"
            - "./cron.log:/var/log/cron.log"
        depends_on:
            - mysqldb
            - db
        cpu_shares: 64
        mem_limit: 2G
    # use remote mysql server via an ssh tunnel
    mysqldb:
        restart: always
        container_name: ${MYSQL_HOST}_external
        image: cagataygurturk/docker-ssh-tunnel:0.0.1
        ports:
            - "8990:3306"
        volumes:
            - ./docker/etc/ssh/:/root/ssh:ro
        environment:
            TUNNEL_HOST: mysql-tunnel
            REMOTE_HOST: 127.0.0.1
            LOCAL_PORT: 3306
            REMOTE_PORT: 3306
    db:
        image: mariadb
        restart: always
        container_name: ${MYSQL_HOST}
        environment:
            - MARIADB_DATABASE=${MYSQL_DATABASE}
            - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MARIADB_USER=${MYSQL_USER}
            - MARIADB_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "3306:3306"
        cpu_shares: 256
        mem_limit: 1G
        volumes:
            - ./docker/db:/var/lib/mysql
            - ./docker/images/mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
    webdav:
        build: ./docker/images/webdav
        container_name: privuma_webdav
        volumes:
            - "./web/ZGF0YQ==:/var/webdav/public"
        ports:
            - "8787:80"
        environment:
            - WEBDAV_USERNAME=${WEBDAV_USERNAME}
            - WEBDAV_PASSWORD=${WEBDAV_PASSWORD}
            - SKIP_PERMISSIONS_FIX=yes
        restart: always
        cpu_shares: 256
        mem_limit: 256M
    cloudfs-http:
        image: rclone/rclone:latest
        container_name: privuma_cloudfs_http
        restart: always
        volumes:
            - ./web/config/rclone:/config/rclone
        user: "${UID}:${GID}"
        ports:
            - "8993:80"
        command: serve http --read-only --no-checksum --no-modtime --addr :80 ${CLOUDFS_HTTP_REMOTE} --include *.{jpg,jpeg,png,gif,mp4,mov,webm} --dir-cache-time 2h --vfs-read-chunk-size 64M --vfs-read-chunk-size-limit off --buffer-size 64M
    adminer:
        image: adminer
        restart: always
        ports:
            - 8080:8080
